{"version":3,"sources":["components/model.js","App.js","serviceWorker.js","index.js"],"names":["Model","props","state","title","data","date","note","amount","isLoading","document","getElementById","value","this","formats","moment","ISO_8601","length","className","isValid","isNaN","style","height","width","backgroundColor","position","top","left","display","justifyContent","alignItems","padding","flexDirection","id","placeholder","onChange","e","setState","target","onClick","validate","console","log","axios","put","headers","then","response","setData","close","catch","React","Component","App","showModel","updateData","total","get","updateTotal","err","i","parseInt","post","str","delete","setUpdatedData","closeModel","alignSelf","marginLeft","marginRight","add","map","openModel","Edit","color","whiteSpace","Delete","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e55f9207.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { PuffLoader } from \"react-spinners\";\n\nclass Model extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.data.title,\n      date: this.props.data.date,\n      note: this.props.data.note,\n      amount: this.props.data.amount,\n      isLoading: false,\n    };\n  }\n  componentDidMount() {\n    document.getElementById(\"titleModel\").value = this.props.data.title;\n    document.getElementById(\"dateModel\").value = this.props.data.date;\n    document.getElementById(\"noteModel\").value = this.props.data.note;\n    document.getElementById(\"amountModel\").value = \"200\";\n  }\n\n  validate() {\n    var formats = [moment.ISO_8601, \"DD/MM/YYYY\", \"D/M/YY\", \"D/M/YYYY\"];\n    if (document.getElementById(\"titleModel\").value.length < 4) {\n      document.getElementById(\"titleModel\").className = \"err\";\n      document.getElementById(\"titlespanModel\").className = \"spanerr\";\n    } else {\n      document.getElementById(\"titlespanModel\").className = \"nospanerr\";\n      document.getElementById(\"titleModel\").className = \"\";\n    }\n\n    if (\n      !moment(\n        document.getElementById(\"dateModel\").value,\n        formats,\n        true\n      ).isValid()\n    ) {\n      document.getElementById(\"dateModel\").className = \"err\";\n      document.getElementById(\"datespanModel\").className = \"spanerr\";\n    } else {\n      document.getElementById(\"datespanModel\").className = \"nospanerr\";\n      document.getElementById(\"dateModel\").className = \"\";\n    }\n\n    if (document.getElementById(\"noteModel\").value.length < 8) {\n      document.getElementById(\"noteModel\").className = \"err\";\n      document.getElementById(\"notespanModel\").className = \"spanerr\";\n    } else {\n      document.getElementById(\"notespanModel\").className = \"nospanerr\";\n      document.getElementById(\"noteModel\").className = \"\";\n    }\n\n    if (\n      isNaN(document.getElementById(\"amountModel\").value) ||\n      document.getElementById(\"amountModel\").value === \"\"\n    ) {\n      document.getElementById(\"amountModel\").className = \"err\";\n      document.getElementById(\"amountspanModel\").className = \"spanerr\";\n    } else {\n      document.getElementById(\"amountspanModel\").className = \"nospanerr\";\n      document.getElementById(\"amountModel\").className = \"\";\n    }\n\n    if (\n      document.getElementById(\"titleModel\").className === \"\" &&\n      document.getElementById(\"amountModel\").className === \"\" &&\n      document.getElementById(\"dateModel\").className === \"\" &&\n      document.getElementById(\"noteModel\").className === \"\"\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          height: \"100vh\",\n          width: \"100vw\",\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n          position: \"absolute\",\n          top: \"0px\",\n          left: \"0px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {this.state.isLoading ? (\n          <PuffLoader />\n        ) : (\n          <div\n            style={{\n              height: \"auto\",\n              width: \"50vw\",\n              backgroundColor: \"#6200ee\",\n              padding: \"10vh\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <input\n              id=\"titleModel\"\n              placeholder=\"Title\"\n              onChange={(e) => {\n                this.setState({ title: e.target.value });\n              }}\n            ></input>\n            <span id=\"titlespanModel\" className=\"nospanerr\">\n              Atleast 4 characters\n            </span>\n            <input\n              id=\"amountModel\"\n              placeholder=\"Amount\"\n              onChange={(e) => {\n                this.setState({ amount: e.target.value });\n              }}\n            ></input>\n            <span id=\"amountspanModel\" className=\"nospanerr\">\n              Must be a valid amount\n            </span>\n            <input\n              id=\"noteModel\"\n              placeholder=\"Note\"\n              onChange={(e) => {\n                this.setState({ note: e.target.value });\n              }}\n            ></input>\n            <span id=\"notespanModel\" className=\"nospanerr\">\n              Atleast 4 characters\n            </span>\n            <input\n              id=\"dateModel\"\n              placeholder=\"Date (DD/MM/YYYY)\"\n              onChange={(e) => {\n                this.setState({ date: e.target.value });\n              }}\n            ></input>\n            <span id=\"datespanModel\" className=\"nospanerr\">\n              Must be a valid date\n            </span>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-around\",\n                width: \"100%\",\n              }}\n            >\n              <div\n                className=\"button\"\n                onClick={() => {\n                  if (this.validate()) {\n                    this.setState({\n                      isLoading: true,\n                    });\n                    const headers = {\n                      \"Access-Control-Allow-Origin\": \"*\",\n                      \"Content-Type\": \"application/json\",\n                    };\n                    const data = {\n                      title: this.state.title,\n                      date: this.state.date,\n                      note: this.state.note,\n                      amount: this.state.amount,\n                    };\n                    console.log(\"validated\");\n\n                    axios\n                      .put(\n                        `https://stackmaze.herokuapp.com/expenses/${this.props.data.id}`,\n                        data,\n                        {\n                          headers: headers,\n                        }\n                      )\n                      .then((response) => {\n                        this.props.setData(response.data);\n                        this.setState({\n                          isLoading: false,\n                        });\n                        this.props.close();\n                      })\n                      .catch((response) => {\n                        console.log(response.data);\n                      });\n                  }\n                }}\n              >\n                UPDATE EXPENSE\n              </div>\n              <div\n                className=\"button\"\n                onClick={() => {\n                  this.props.close();\n                }}\n              >\n                CANCEL\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Model;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Delete, Edit } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { PuffLoader } from \"react-spinners\";\nimport Model from \"./components/model\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      date: \"\",\n      note: \"\",\n      data: [],\n      amount: \"\",\n      isLoading: true,\n      showModel: false,\n      updateData: {},\n      total: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true,\n    });\n    axios\n      .get(\"https://stackmaze.herokuapp.com/expenses\")\n      .then((response) => {\n        this.updateTotal(response.data);\n        this.setState({\n          data: response.data,\n          isLoading: false,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  closeModel() {\n    this.setState({\n      showModel: false,\n    });\n  }\n\n  updateTotal(data) {\n    let total = 0;\n    for (let i = 0; i < data.length; i++) {\n      total += parseInt(data[i].amount);\n    }\n    this.setState({\n      total: total,\n    });\n  }\n\n  openModel(data) {\n    this.setState({\n      showModel: true,\n      updateData: data,\n    });\n    console.log(data);\n  }\n\n  setUpdatedData(data) {\n    this.setState({\n      data: data,\n    });\n  }\n\n  add() {\n    if (this.validate()) {\n      this.setState({\n        isLoading: true,\n      });\n      const headers = {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n      };\n      const data = {\n        title: this.state.title,\n        date: this.state.date,\n        note: this.state.note,\n        amount: this.state.amount,\n      };\n      console.log(\"validated\");\n\n      axios\n        .post(\"https://stackmaze.herokuapp.com/expenses\", data, {\n          headers: headers,\n        })\n        .then((response) => {\n          this.updateTotal(response.data);\n          this.setState({\n            isLoading: false,\n            data: response.data,\n          });\n\n          document.getElementById(\"title\").value = \"\";\n          document.getElementById(\"amount\").value = \"\";\n          document.getElementById(\"note\").value = \"\";\n          document.getElementById(\"date\").value = \"\";\n        })\n        .catch((response) => {\n          console.log(response.data);\n        });\n    }\n  }\n\n  delete(str) {\n    if (str !== \"\") {\n      this.setState({\n        isLoading: true,\n      });\n      axios\n        .delete(`https://stackmaze.herokuapp.com/expenses/${str}`)\n        .then((response) => {\n          this.updateTotal(response.data);\n          this.setState({\n            isLoading: false,\n            data: response.data,\n          });\n        })\n        .catch((response) => {\n          console.log(response.data);\n        });\n    }\n  }\n\n  validate() {\n    var formats = [moment.ISO_8601, \"DD/MM/YYYY\", \"D/M/YY\", \"D/M/YYYY\"];\n    if (document.getElementById(\"title\").value.length < 4) {\n      document.getElementById(\"title\").className = \"err\";\n      document.getElementById(\"titlespan\").className = \"spanerr\";\n    } else {\n      document.getElementById(\"titlespan\").className = \"nospanerr\";\n      document.getElementById(\"title\").className = \"\";\n    }\n\n    if (\n      !moment(document.getElementById(\"date\").value, formats, true).isValid()\n    ) {\n      document.getElementById(\"date\").className = \"err\";\n      document.getElementById(\"datespan\").className = \"spanerr\";\n    } else {\n      document.getElementById(\"datespan\").className = \"nospanerr\";\n      document.getElementById(\"date\").className = \"\";\n    }\n\n    if (document.getElementById(\"note\").value.length < 8) {\n      document.getElementById(\"note\").className = \"err\";\n      document.getElementById(\"notespan\").className = \"spanerr\";\n    } else {\n      document.getElementById(\"notespan\").className = \"nospanerr\";\n      document.getElementById(\"note\").className = \"\";\n    }\n\n    if (\n      isNaN(document.getElementById(\"amount\").value) ||\n      document.getElementById(\"amount\").value === \"\"\n    ) {\n      document.getElementById(\"amount\").className = \"err\";\n      document.getElementById(\"amountspan\").className = \"spanerr\";\n    } else {\n      document.getElementById(\"amountspan\").className = \"nospanerr\";\n      document.getElementById(\"amount\").className = \"\";\n    }\n\n    if (\n      document.getElementById(\"title\").className === \"\" &&\n      document.getElementById(\"amount\").className === \"\" &&\n      document.getElementById(\"note\").className === \"\" &&\n      document.getElementById(\"date\").className === \"\"\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        {this.state.isLoading ? (\n          <div\n            style={{\n              height: \"100vh\",\n              width: \"100vw\",\n              backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n              position: \"absolute\",\n              top: \"0px\",\n              left: \"0px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <div\n              style={{\n                height: \"300px\",\n                width: \"300px\",\n                backgroundColor: \"white\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <PuffLoader />\n            </div>\n          </div>\n        ) : null}\n        {this.state.showModel ? (\n          <Model\n            data={this.state.updateData}\n            setData={(data) => this.setUpdatedData(data)}\n            close={() => {\n              this.closeModel();\n            }}\n          />\n        ) : null}\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <div className=\"topRow\">\n            <div className=\"expText\">MY EXPENSES</div>\n            <div className=\"totalRow\">\n              <label className=\"totText\">Total</label>\n              <div\n                style={{\n                  width: \"1px\",\n                  backgroundColor: \"rgba(225, 225, 225, 0.75)\",\n                  height: \"30px\",\n                  alignSelf: \"flex-end\",\n                  marginLeft: \"10px\",\n                  marginRight: \"10px\",\n                }}\n              ></div>\n              <label className=\"totText\">{this.state.total}</label>\n            </div>\n          </div>\n\n          <div className=\"bottomrow\">\n            <div className=\"left\">\n              <div className=\"leftContainer\">\n                <input\n                  id=\"title\"\n                  placeholder=\"Title\"\n                  onChange={(e) => {\n                    this.setState({\n                      title: e.target.value,\n                    });\n                  }}\n                ></input>\n                <span id=\"titlespan\" className=\"nospanerr\">\n                  Atleast 4 characters\n                </span>\n                <input\n                  id=\"amount\"\n                  placeholder=\"Amount\"\n                  onChange={(e) => {\n                    this.setState({ amount: e.target.value });\n                  }}\n                ></input>\n                <span id=\"amountspan\" className=\"nospanerr\">\n                  Must be a valid amount\n                </span>\n                <input\n                  id=\"note\"\n                  placeholder=\"Note\"\n                  onChange={(e) => {\n                    this.setState({ note: e.target.value });\n                  }}\n                ></input>\n                <span id=\"notespan\" className=\"nospanerr\">\n                  Atleast 8 characters\n                </span>\n                <input\n                  id=\"date\"\n                  placeholder=\"Date (DD/MM/YYYY)\"\n                  onChange={(e) => {\n                    this.setState({ date: e.target.value });\n                  }}\n                ></input>\n                <span id=\"datespan\" className=\"nospanerr\">\n                  Must be a valid date\n                </span>\n                <div\n                  className=\"button\"\n                  onClick={() => {\n                    this.add();\n                  }}\n                >\n                  ADD EXPENSE\n                </div>\n              </div>\n            </div>\n            <div className=\"right\">\n              <div className=\"list\">\n                {this.state.data.map((e) => (\n                  <div className=\"listEle\" id={e.id}>\n                    <div\n                      className=\"listEleCorner\"\n                      onClick={() => {\n                        this.openModel(e);\n                      }}\n                    >\n                      <Edit style={{ color: \"rgba(225, 225, 225, 0.7)\" }} />\n                    </div>\n                    <div className=\"listEleMain\">\n                      <div className=\"date\">{e.date}</div>\n                      <div className=\"titleRow\">\n                        <div className=\"title\">{e.title}</div>\n                        <div className=\"amount\">{e.amount}</div>\n                      </div>\n                      <div className=\"note\">\n                        <label\n                          style={{\n                            whiteSpace: \"nowrap\",\n                          }}\n                        >\n                          <strong>Note:</strong> {e.note}\n                        </label>\n                      </div>\n                    </div>\n                    <div\n                      className=\"listEleCorner\"\n                      onClick={() => {\n                        this.delete(e.id);\n                      }}\n                    >\n                      <Delete style={{ color: \"rgba(225, 225, 225, 0.7)\" }} />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}